@use "sass:math";

$max-grid-columns: 24;
$max-small-grid-columns: 24;

/* Screen Sizes */
$media-xl: 1560px;
$media-l: 1200px;
$media-m: 1024px;
$media-s: 802px;
$media-xs: 480px;

@mixin colums ($prefix, $max-columns) {
    @for $i from 1 through $max-columns {
        .col#{$prefix}#{$i} {
            --grid-cols: #{$i};
            grid-column-end: span #{$i};
        }

        .col#{$prefix}start-#{$i} {
            grid-column-start: #{$i};
        }
    }

    .col#{$prefix}start-auto {
        grid-column-start: auto;
    }
}

:root {
    --grid-gap: #{math.div(16, 1920) * 100vw};
    --grid-cols: #{$max-grid-columns};
}

.grid {
    width: 100%;
    display: grid;
    column-gap: var(--grid-gap, 0);
    grid-template-columns: repeat(24, calc((100vw - var(--grid-gap, 0) * 23) / 24));
    grid-template-rows: repeat(auto-fit, 1fr);
    border-collapse: collapse;
    & > * {
        grid-column-start: 1;
        grid-column-end: calc(var(--grid-cols) + 1);
    }
}

.grid--center {
    max-width: 1440px;
    margin-left: auto;
    margin-right: auto;
}

.grid-flow-col {
    grid-auto-flow: column;
}

@include colums("-", $max-grid-columns);

@media (min-width: $media-xl) {
    @include colums("-xl-", $max-grid-columns);
}

@media (max-width: $media-l) {
    @include colums("-l-", $max-grid-columns);
}

@media (max-width: $media-m) {
    :root {
        --grid-cols: #{$max-small-grid-columns};
    }

    @include colums("-m-", $max-small-grid-columns);
}

@media (max-width: $media-s) {
    @include colums("-s-", $max-small-grid-columns);
}

@media (max-width: $media-xs) {
    @include colums("-xs-", $max-small-grid-columns);
}